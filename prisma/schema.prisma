generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id             String        @id @default(uuid())
  nome           String
  cpf            String?       @unique
  rg             String?
  dataNascimento DateTime?
  telefone       String?
  email          String?       @unique
  endereco       String?
  cidade         String?
  estado         String?
  cep            String?
  observacoes    String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  agendamentos   Agendamento[]
  receitas       Receita[]
  vendas         Venda[]

  @@map("clientes")
}

model Receita {
  id                     String   @id @default(uuid())
  clienteId              String   @map("cliente_id")
  dataReceita            DateTime @map("data_receita") @db.Date
  observacoes            String?
  odEsferico             Float?   @map("od_esferico")
  odCilindrico           Float?   @map("od_cilindrico")
  odEixo                 Int?     @map("od_eixo")
  odAdicao               Float?   @map("od_adicao")
  oeEsferico             Float?   @map("oe_esferico")
  oeCilindrico           Float?   @map("oe_cilindrico")
  oeEixo                 Int?     @map("oe_eixo")
  oeAdicao               Float?   @map("oe_adicao")
  distanciaPupilar       Float?   @map("distancia_pupilar")
  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @updatedAt @map("updated_at")
  distanciaNauseaPupilar Float?   @map("distancia_nausea_pupilar")
  alturaLente            Float?   @map("altura_lente")
  cliente                Cliente  @relation(fields: [clienteId], references: [id], onDelete: Cascade)

  @@map("receitas")
}

model Agendamento {
  id              String   @id @default(uuid())
  clienteId       String   @map("cliente_id")
  dataAgendamento DateTime @map("data_agendamento") @db.Date
  horaAgendamento String   @map("hora_agendamento")
  tipoAgendamento String   @map("tipo_agendamento")
  observacoes     String?
  status          String   @default("Pendente")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  cliente         Cliente  @relation(fields: [clienteId], references: [id], onDelete: Cascade)

  @@map("agendamentos")
}

model Produto {
  id                       String                        @id @default(uuid())
  nome                     String
  marca                    String?
  modelo                   String?
  quantidadeEmEstoque      Int                           @default(0) @map("quantidade_em_estoque")
  precoCusto               Float?                        @map("preco_custo")
  precoVenda               Float?                        @map("preco_venda")
  fornecedor               String?
  descricao                String?
  sku                      String?                       @unique
  createdAt                DateTime                      @default(now()) @map("created_at")
  updatedAt                DateTime                      @updatedAt @map("updated_at")
  tipo                     TipoProdutoEnum
  tipoLenteGrau            TipoLenteGrauEnum?            @map("tipo_lente_grau")
  materialLenteGrau        MaterialLenteGrauEnum?        @map("material_lente_grau")
  tratamentosLenteGrau     String[]                      @map("tratamentos_lente_grau")
  grauEsfericoOD           Float?                        @map("grau_esferico_od")
  grauEixoOD               Int?                          @map("grau_eixo_od")
  grauEsfericoOE           Float?                        @map("grau_esferico_oe")
  fabricanteLaboratorio    String?                       @map("fabricante_laboratorio")
  curvaBaseLenteContato    String?                       @map("curva_base_lente_contato")
  diametroLenteContato     Float?                        @map("diametro_lente_contato")
  poderLenteContato        Float?                        @map("poder_lente_contato")
  tipoDescarteLenteContato TipoDescarteLenteContatoEnum? @map("tipo_descarte_lente_contato")
  solucoesLenteContato     String?                       @map("solucoes_lente_contato")
  grauCilindricoOD         Float?                        @map("od_cilindrico")
  grauAdicaoOE             Float?                        @map("oe_adicao")
  grauCilindricoOE         Float?                        @map("oe_cilindrico")
  grauAdicaoOD             Float?                        @map("od_adicao")
  grauEixoOE               Int?                          @map("oe_eixo")
  itensVenda               ItemVenda[]

  @@map("produtos")
}

model Venda {
  id              String      @id @default(uuid())
  clienteId       String      @map("cliente_id")
  dataVenda       DateTime    @default(now()) @map("data_venda")
  valorTotal      Float       @map("valor_total")
  statusPagamento String      @default("Pendente") @map("status_pagamento")
  observacoes     String?
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")
  itens           ItemVenda[]
  cliente         Cliente     @relation(fields: [clienteId], references: [id], onDelete: Cascade)

  @@map("vendas")
}

model ItemVenda {
  id            String   @id @default(uuid())
  vendaId       String   @map("venda_id")
  produtoId     String   @map("produto_id")
  quantidade    Int
  precoUnitario Float    @map("preco_unitario")
  subtotal      Float
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  produto       Produto  @relation(fields: [produtoId], references: [id])
  venda         Venda    @relation(fields: [vendaId], references: [id], onDelete: Cascade)

  @@map("itens_venda")
}

enum TipoProdutoEnum {
  Armacao
  LenteDeGrau
  LenteDeContato
  Acessorio
  Servico
  Outro
}

enum TipoLenteGrauEnum {
  VisaoSimples
  Multifocal
  Bifocal
  Ocupacional
  Progressiva
  Outro
}

enum MaterialLenteGrauEnum {
  Resina
  Policarbonato
  Cristal
  Trivex
  Outro
}

enum TipoDescarteLenteContatoEnum {
  Diario
  Quinzenal
  Mensal
  Trimestral
  Anual
  Outro
}
